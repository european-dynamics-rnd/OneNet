add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
add_header Referrer-Policy "origin";
add_header Content-Security-Policy "default-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' ; style-src-elem 'unsafe-inline' 'self' https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob:; img-src 'self' data:; font-src 'self' https: data:;";

server {
  listen 8080 ssl;
  server_name <dns-name> <ip>;

  ssl_certificate  /etc/nginx/ssl/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;

  location /ch {
    proxy_pass https://<ip>:<port>;
    # Proxy pass configuration
    proxy_redirect off;
    proxy_set_header    Upgrade     $http_upgrade;
    proxy_set_header    Connection  "upgrade";
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header  X-Forwarded-Proto  https;
    rewrite ^/ch/(.*)$ /$1 break;
  }

  location /ch-logs {
    proxy_pass http://<ip>:<port>;
    # Proxy pass configuration
    proxy_redirect off;
    proxy_set_header    Upgrade     $http_upgrade;
    proxy_set_header    Connection  "upgrade";
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header  X-Forwarded-Proto  https;
    rewrite ^/ch-logs/(.*)$ /$1 break;
  }

  location /data-app-provider {
    proxy_pass https://<ip>:<port>;
    # Proxy pass configuration
    proxy_redirect off;
    proxy_set_header    Upgrade     $http_upgrade;
    proxy_set_header    Connection  "upgrade";
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header  X-Forwarded-Proto  https;
    rewrite ^/data-app-provider/(.*)$ /$1 break;
  }

  location /data-app-consumer {
    proxy_pass https://<ip>:<port>;
    # Proxy pass configuration
    proxy_redirect off;
    proxy_set_header    Upgrade     $http_upgrade;
    proxy_set_header    Connection  "upgrade";
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header  X-Forwarded-Proto  https;
    rewrite ^/data-app-consumer/(.*)$ /$1 break;
  }

  location /swagger-api {
    proxy_pass https://<ip>:<port>;
    # Proxy pass configuration
    proxy_redirect off;
    proxy_set_header    Upgrade     $http_upgrade;
    proxy_set_header    Connection  "upgrade";
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header  X-Forwarded-Proto  https;
    rewrite ^/swagger-api/(.*)$ /$1 break;
  }

  location /ecc-provider {
    proxy_pass https://<ip>:<port>;
    # Proxy pass configuration
    proxy_redirect off;
    proxy_set_header    Upgrade     $http_upgrade;
    proxy_set_header    Connection  "upgrade";
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header  X-Forwarded-Proto  https;
    rewrite ^/ecc-provider/(.*)$ /$1 break;
  }
}

server {
  listen 443 ssl;
  server_name <dns-name>;

  ssl_certificate  /etc/nginx/ssl/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;

  location / {
        proxy_pass http://<ip>:<port>;
    }

  location /api-onenet {
    proxy_pass http://<ip>:<port>;
    # Proxy pass configuration
    proxy_redirect off;
    proxy_set_header    Upgrade     $http_upgrade;
    proxy_set_header    Connection  "upgrade";
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header  X-Forwarded-Proto  https;
    rewrite ^/api-onenet/(.*)$ /$1 break;
  }

}

server {
  listen 80;
  server_name <dns-name> <ip>;

  return 301 <dns-name>$request_uri;
}
